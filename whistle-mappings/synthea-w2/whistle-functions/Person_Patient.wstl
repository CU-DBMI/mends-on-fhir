package main

// 2022-03-22: Aligned Y-M-D_of_birth to new SQL
// 2022-03-24: Refactor

def Person_Patient(Person, required context) {
   resourceType: "Patient";
   id: Person.person_id;
   meta.profile[]: "http://hl7.org/fhir/us/core/StructureDefinition/us-core-patient";
   implicitRules:"";
   language:"en-US";
   text:"";
   contained[]:"";

// US Core: Race, ethnicity, birthsex extensions
   extension[]: USCore_Race(Person.race_concept_id)
   extension[]: USCore_Ethnicity(Person.ethnicity_concept_id)
   extension[]: USCore_Birthsex(Person.gender_concept_id)
   
   modifierExtension:"";
   identifier[]: Person_Identifier(Person.person_id) 
   active:"";

 // US-Core: Name
   name[0].family: "MENDS";
   name[0].given[0]: "NONAME";

   telecom:"";
   gender: CodeMapDefault(Person.gender_concept_id, "Person.gender.conceptid");

   if context.config.output.phi == "yes"  then {
      birthDate : strFmt("%s%s%s%s","-", Person.year_of_birth, Person.month_of_birth, Person.day_of_birth);
      var Death_DT: Person.death_date;
      if (Death_DT)  then {
         deceasedDateTime: Death_DT;
      }
   } else {
      birthDate : "2030-01-01"
      var Death_DT: Person.death_date;
      if (Death_DT)  then {
         deceasedDateTime: "2030-01-01";
      }
   }

   address[]: Address("home", "both", Person.state, Person.zip, context);
   martialStatus:"";
   multipleBirth:"";
   photo:"";
   contact:"";
   communication:"";

// US-Core: generalPractitioner
   var Provider_ID: Person.provider_id; 
   if (Provider_ID)  then {
      generalPractitioner[]: Reference("Practitioner", Provider_ID);
   }

   managingOrganization:"";
   link:"";
}

// ******* End of Person_Patient *************



// *************************************************************************
// *
// *   All Person-specific function calls here.
// *   Function calls useful accross resources are in DataTypes.wstl
// *
// *************************************************************************

def USCore_Race(race_concept_id) {
   url : "http://hl7.org/fhir/us/core/StructureDefinition/us-core-race";
   
   // add the text sub extension
   var text.url: "text"
   var text.valueString: race_concept_id
   
   
   // add OMB if we have it
   var OmbCoding : CodingMapNull(race_concept_id, "Person.race-concept-id--Patient.x.uscore-omb");
   if (OmbCoding)  then {
      var text.valueString: OmbCoding.display
      var omb.url: "ombCategory"
      var omb.valueCoding : OmbCoding
      extension[]: omb
   }

   var DetailCodings: CodingsMapNull(race_concept_id, "Person.race-concept-id--Patient.x.uscore-detailed")
   if (DetailCodings) then {
      var text.valueString: DetailCodings[0].display
   }
   extension[]: USCore_Race_Detailed(DetailCodings[])
   extension[]: text
}

// returns Extension instances for detailed race
def USCore_Race_Detailed(detailed_coding) {
   url: "detailed"
   valueCoding: detailed_coding
}

def USCore_Ethnicity(ethnicity_concept_id) {
   url : "http://hl7.org/fhir/us/core/StructureDefinition/us-core-ethnicity";
   var EthnicityValueCoding : CodingMapDefault(ethnicity_concept_id, "Person.ethnicity.conceptid");
   if (EthnicityValueCoding) then {
      extension[0].valueCoding : EthnicityValueCoding;
      extension[0].url : "ombCategory";
      extension[1].valueString : EthnicityValueCoding.display;
      extension[1].url : "text";
   } else {
      extension[0].valueString : ethnicity_concept_id;
      extension[0].url : "text";
   }
}

def USCore_Birthsex(gender_concept_id) {
    url : "http://hl7.org/fhir/us/core/StructureDefinition/us-core-birthsex";
    valueCode : CodeMapDefault(gender_concept_id, "Person.birthsex.conceptid");
}

// Person_identifier: Creates an Identifier structure for a person
def Person_Identifier(person_id) {
   use: "secondary";
   type.coding[0].system: "http://terminology.hl7.org/CodeSystem/v2-0203";
   type.coding[0].code: "MR";
   type.coding[0].display: "Medical record number";
   type.text: "MENDS ID";
   system: Code_System("HDC");
   value: person_id;
}

