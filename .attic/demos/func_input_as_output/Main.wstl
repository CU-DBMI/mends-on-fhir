$this: OutputInputAfterModification($root)
def OutputInputAfterModification(context){
  // context has to be reassigned to a variable to be able to write to it
  // apparently this assignment creates a copy
  var c: context

  // modify the context object
  // overwriting rules don't apply to variables
  var c.input: "modified value"

  // this sets the original context's value.
  // the original value is not modified
  originalInput: context

  // set the mofified input as the return
  $this: c
}

//$this: OutputInputAfterModification_2($root)
def OutputInputAfterModification_2(context){

  // this doesn't modify the function's argument.
  // it creates a the path:value in the function's return value
  context.input.modified: true

  // this merges the context with the current return value instead of overwriting it.
  $this: context
}


//$this: OutputInputAfterModification_3($root)
def OutputInputAfterModification_3(context){

  // this doesn't modify the function's argument.
  // it creates a the path:value in the function's return value
  context.input.modified: true

  $this: "hello"

  // this merges the context with the current return value instead of overwriting it.
  $this: context
}
