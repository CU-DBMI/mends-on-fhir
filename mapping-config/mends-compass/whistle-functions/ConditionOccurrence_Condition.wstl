// Change Log:
// 2022-09-09: Add source_concept to Condition.code CodeableConcept


// Resource: Condition
// US Core R4
// http://hl7.org/fhir/us/core/StructureDefinition/us-core-condition

def ConditionOccurrence_Condition(ConditionOccurrence, required context) {
  resourceType : "Condition";
  id : ConditionOccurrence.condition_occurrence_id;
  meta.profile[]: "http://hl7.org/fhir/us/core/StructureDefinition/us-core-condition";
  implicitRules:"";
  language:"en-US";
  text:"";
  contained[]:"";
  extension[]:"";
  modifierExtension[]:"";
  identifier[0].use: "secondary";
  identifier[0].type.coding[0].system: "http://terminology.hl7.org/CodeSystem/v2-0203";
  identifier[0].type.coding[0].code: "MR";
  identifier[0].type.coding[0].display: "Medical record number";
  identifier[0].type.text: "MENDS ID";
  identifier[0].system: Code_System("HDC");
  identifier[0].value: ConditionOccurrence.person_id;
  clinicalStatus:"";
  verificationStatus:"";
  // mandatory
  var CategoryCoding: CodingMapDefault(ConditionOccurrence.condition_type_concept_id, "ConditionOccurrence.category.conceptid");
  category[0].coding[0]: CategoryCoding;
  category[0].text: CategoryCoding.display;

  text: ConditionOccurrence.condition_type_concept_code;
  severity:"";
  //mandatory + MENDS
  // Returns both source (ICD10CM) and standard (SNOMED) codings
  code: Condition_Code(ConditionOccurrence)

  bodySite[]:"";
  // mandatory
  subject : Reference("Patient", ConditionOccurrence.person_id);

  // In OMOP, conditions do not need to be associated with an encounter
  // In FHIR, encounter is optional
  var Encounter_ID: ConditionOccurrence.visit_occurrence_id;
  if (Encounter_ID) {
    encounter: Reference("Encounter", ConditionOccurrence.visit_occurrence_id);
  }
  
  // MENDS
  if context.config.output.phi = "yes" {
    onsetPeriod.start : ConditionOccurrence.condition_start_date;
    onsetPeriod.end : ConditionOccurrence.condition_end_date;
  } else {
    onsetPeriod.start : "2030-01-01";
    onsetPeriod.end : "2030-01-01";
  }
  abatementString : ConditionOccurrence.stop_reason;
  recordedDate:"";
  recorder:"";
  var Provider_ID: ConditionOccurrence.provider_id; 
  if (Provider_ID) {
    asserter : Reference("Practitioner", Provider_ID);
  }
  stage[]:"";
  assessment[]:"";
  type:"";
  evidence[]:"";
  note[]:"";
}


// ***********************************************************************************
// Condition_Code() returns both source and standard condition codes
// Source = ICD10CM; Standard = SnomedSNOMED
// ***********************************************************************************
def Condition_Code(co) {
  var coding[]: Coding(Code_System(co.condition_vocabulary_id), "", co.condition_concept_code, co.condition_concept_name);
  if (co.condition_concept_code ~= co.condition_source_concept_code) {
    var coding[]: Coding(Code_System(co.condition_source_vocabulary_id), "", co.condition_source_concept_code, co.condition_source_concept_name)
  }
  $this: CodeableConcept(coding,co.condition_source_value)
}